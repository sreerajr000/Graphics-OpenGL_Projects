/*
 * terrain.h
 *
 *  Created on: 18-Sep-2017
 *      Author: sree
 */

#ifndef TERRAIN_H_
#define TERRAIN_H_

class Terrain {
public:
	Model* terrain[3][3];
	void update(){
		glm::vec3 playerPos = camera.Position;
		int x = playerPos.x / 10.0f + 50;
		int y = playerPos.z / 10.0f + 50;
		for(int i = x - 1; i <= x + 1; i++){
			for(int j = y - 1; j <= y + 1; j++){
				stringstream ss;
				ss << "terrain_";
				ss << i << "_" << j << ".obj";
				std::cout << ss.str() << std::endl;
			}
		}
	}
	Terrain(){
		glm::vec3 playerPos = camera.Position;
		int x = playerPos.x / 10.0f;
		int y = playerPos.z / 10.0f;
		for(int i = x - 1; i <= x + 1; i++){
			for(int j = y - 1; j <= y + 1; j++){
				stringstream ss;
				ss << "terrain_";
				ss << i << "_" << j << ".obj";
				std::cout << ss.str() << std::endl;
			}
		}

	}
	void draw(Shader shader){
		for(unsigned int i = 0; i < 3; i++){
			for(unsigned int j = 0; j < 3; i++){
				//Draw each cells
				model = glm::mat4();
				shader.setMat4("model", model);
				terrain[i][j]->Draw(shader);
			}
		}
	}
};




#endif /* TERRAIN_H_ */
